//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using UnitsNet.NumberExtensions.NumberToElectricConductivity;
using Xunit;

namespace UnitsNet.Tests
{
    public class NumberToElectricConductivityExtensionsTests
    {
        [Fact]
        public void NumberToKilosiemensPerFootTest() =>
            Assert.Equal(ElectricConductivity.FromKilosiemensPerFoot(2), 2.KilosiemensPerFoot());

        [Fact]
        public void NumberToKilosiemensPerInchTest() =>
            Assert.Equal(ElectricConductivity.FromKilosiemensPerInch(2), 2.KilosiemensPerInch());

        [Fact]
        public void NumberToKilosiemensPerKilofootTest() =>
            Assert.Equal(ElectricConductivity.FromKilosiemensPerKilofoot(2), 2.KilosiemensPerKilofoot());

        [Fact]
        public void NumberToKilosiemensPerKilometerTest() =>
            Assert.Equal(ElectricConductivity.FromKilosiemensPerKilometer(2), 2.KilosiemensPerKilometer());

        [Fact]
        public void NumberToKilosiemensPerMileTest() =>
            Assert.Equal(ElectricConductivity.FromKilosiemensPerMile(2), 2.KilosiemensPerMile());

        [Fact]
        public void NumberToKilosiemensPerMeterTest() =>
            Assert.Equal(ElectricConductivity.FromKilosiemensPerMeter(2), 2.KilosiemensPerMeter());

        [Fact]
        public void NumberToMegasiemensPerFootTest() =>
            Assert.Equal(ElectricConductivity.FromMegasiemensPerFoot(2), 2.MegasiemensPerFoot());

        [Fact]
        public void NumberToMegasiemensPerInchTest() =>
            Assert.Equal(ElectricConductivity.FromMegasiemensPerInch(2), 2.MegasiemensPerInch());

        [Fact]
        public void NumberToMegasiemensPerKilofootTest() =>
            Assert.Equal(ElectricConductivity.FromMegasiemensPerKilofoot(2), 2.MegasiemensPerKilofoot());

        [Fact]
        public void NumberToMegasiemensPerKilometerTest() =>
            Assert.Equal(ElectricConductivity.FromMegasiemensPerKilometer(2), 2.MegasiemensPerKilometer());

        [Fact]
        public void NumberToMegasiemensPerMileTest() =>
            Assert.Equal(ElectricConductivity.FromMegasiemensPerMile(2), 2.MegasiemensPerMile());

        [Fact]
        public void NumberToMegasiemensPerMeterTest() =>
            Assert.Equal(ElectricConductivity.FromMegasiemensPerMeter(2), 2.MegasiemensPerMeter());

        [Fact]
        public void NumberToMicrosiemensPerFootTest() =>
            Assert.Equal(ElectricConductivity.FromMicrosiemensPerFoot(2), 2.MicrosiemensPerFoot());

        [Fact]
        public void NumberToMicrosiemensPerInchTest() =>
            Assert.Equal(ElectricConductivity.FromMicrosiemensPerInch(2), 2.MicrosiemensPerInch());

        [Fact]
        public void NumberToMicrosiemensPerKilofootTest() =>
            Assert.Equal(ElectricConductivity.FromMicrosiemensPerKilofoot(2), 2.MicrosiemensPerKilofoot());

        [Fact]
        public void NumberToMicrosiemensPerKilometerTest() =>
            Assert.Equal(ElectricConductivity.FromMicrosiemensPerKilometer(2), 2.MicrosiemensPerKilometer());

        [Fact]
        public void NumberToMicrosiemensPerMileTest() =>
            Assert.Equal(ElectricConductivity.FromMicrosiemensPerMile(2), 2.MicrosiemensPerMile());

        [Fact]
        public void NumberToMicrosiemensPerMeterTest() =>
            Assert.Equal(ElectricConductivity.FromMicrosiemensPerMeter(2), 2.MicrosiemensPerMeter());

        [Fact]
        public void NumberToMillisiemensPerFootTest() =>
            Assert.Equal(ElectricConductivity.FromMillisiemensPerFoot(2), 2.MillisiemensPerFoot());

        [Fact]
        public void NumberToMillisiemensPerInchTest() =>
            Assert.Equal(ElectricConductivity.FromMillisiemensPerInch(2), 2.MillisiemensPerInch());

        [Fact]
        public void NumberToMillisiemensPerKilofootTest() =>
            Assert.Equal(ElectricConductivity.FromMillisiemensPerKilofoot(2), 2.MillisiemensPerKilofoot());

        [Fact]
        public void NumberToMillisiemensPerKilometerTest() =>
            Assert.Equal(ElectricConductivity.FromMillisiemensPerKilometer(2), 2.MillisiemensPerKilometer());

        [Fact]
        public void NumberToMillisiemensPerMileTest() =>
            Assert.Equal(ElectricConductivity.FromMillisiemensPerMile(2), 2.MillisiemensPerMile());

        [Fact]
        public void NumberToMillisiemensPerMeterTest() =>
            Assert.Equal(ElectricConductivity.FromMillisiemensPerMeter(2), 2.MillisiemensPerMeter());

        [Fact]
        public void NumberToNanosiemensPerFootTest() =>
            Assert.Equal(ElectricConductivity.FromNanosiemensPerFoot(2), 2.NanosiemensPerFoot());

        [Fact]
        public void NumberToNanosiemensPerInchTest() =>
            Assert.Equal(ElectricConductivity.FromNanosiemensPerInch(2), 2.NanosiemensPerInch());

        [Fact]
        public void NumberToNanosiemensPerKilofootTest() =>
            Assert.Equal(ElectricConductivity.FromNanosiemensPerKilofoot(2), 2.NanosiemensPerKilofoot());

        [Fact]
        public void NumberToNanosiemensPerKilometerTest() =>
            Assert.Equal(ElectricConductivity.FromNanosiemensPerKilometer(2), 2.NanosiemensPerKilometer());

        [Fact]
        public void NumberToNanosiemensPerMileTest() =>
            Assert.Equal(ElectricConductivity.FromNanosiemensPerMile(2), 2.NanosiemensPerMile());

        [Fact]
        public void NumberToNanosiemensPerMeterTest() =>
            Assert.Equal(ElectricConductivity.FromNanosiemensPerMeter(2), 2.NanosiemensPerMeter());

        [Fact]
        public void NumberToPicosiemensPerFootTest() =>
            Assert.Equal(ElectricConductivity.FromPicosiemensPerFoot(2), 2.PicosiemensPerFoot());

        [Fact]
        public void NumberToPicosiemensPerInchTest() =>
            Assert.Equal(ElectricConductivity.FromPicosiemensPerInch(2), 2.PicosiemensPerInch());

        [Fact]
        public void NumberToPicosiemensPerKilofootTest() =>
            Assert.Equal(ElectricConductivity.FromPicosiemensPerKilofoot(2), 2.PicosiemensPerKilofoot());

        [Fact]
        public void NumberToPicosiemensPerKilometerTest() =>
            Assert.Equal(ElectricConductivity.FromPicosiemensPerKilometer(2), 2.PicosiemensPerKilometer());

        [Fact]
        public void NumberToPicosiemensPerMileTest() =>
            Assert.Equal(ElectricConductivity.FromPicosiemensPerMile(2), 2.PicosiemensPerMile());

        [Fact]
        public void NumberToPicosiemensPerMeterTest() =>
            Assert.Equal(ElectricConductivity.FromPicosiemensPerMeter(2), 2.PicosiemensPerMeter());

        [Fact]
        public void NumberToSiemensPerFootTest() =>
            Assert.Equal(ElectricConductivity.FromSiemensPerFoot(2), 2.SiemensPerFoot());

        [Fact]
        public void NumberToSiemensPerInchTest() =>
            Assert.Equal(ElectricConductivity.FromSiemensPerInch(2), 2.SiemensPerInch());

        [Fact]
        public void NumberToSiemensPerKilofootTest() =>
            Assert.Equal(ElectricConductivity.FromSiemensPerKilofoot(2), 2.SiemensPerKilofoot());

        [Fact]
        public void NumberToSiemensPerKilometerTest() =>
            Assert.Equal(ElectricConductivity.FromSiemensPerKilometer(2), 2.SiemensPerKilometer());

        [Fact]
        public void NumberToSiemensPerMileTest() =>
            Assert.Equal(ElectricConductivity.FromSiemensPerMile(2), 2.SiemensPerMile());

        [Fact]
        public void NumberToSiemensPerMeterTest() =>
            Assert.Equal(ElectricConductivity.FromSiemensPerMeter(2), 2.SiemensPerMeter());

    }
}
