//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;

namespace UnitsNet.Tests.CustomCode
{
    public class ElectricLinearResistivityTests : ElectricLinearResistivityTestsBase
    {
        // Override properties in base class here
        protected override double KiloohmsPerCentimeterInOneOhmPerMeter => throw new NotImplementedException();

        protected override double KiloohmsPerFootInOneOhmPerMeter => throw new NotImplementedException();

        protected override double KiloohmsPerKilometerInOneOhmPerMeter => throw new NotImplementedException();

        protected override double KiloohmsPerMeterInOneOhmPerMeter => throw new NotImplementedException();

        protected override double KiloohmsPerMileInOneOhmPerMeter => throw new NotImplementedException();

        protected override double MegaohmsPerCentimeterInOneOhmPerMeter => throw new NotImplementedException();

        protected override double MegaohmsPerFootInOneOhmPerMeter => throw new NotImplementedException();

        protected override double MegaohmsPerKilometerInOneOhmPerMeter => throw new NotImplementedException();

        protected override double MegaohmsPerMeterInOneOhmPerMeter => throw new NotImplementedException();

        protected override double MegaohmsPerMileInOneOhmPerMeter => throw new NotImplementedException();

        protected override double MicroohmsPerCentimeterInOneOhmPerMeter => throw new NotImplementedException();

        protected override double MicroohmsPerFootInOneOhmPerMeter => throw new NotImplementedException();

        protected override double MicroohmsPerKilometerInOneOhmPerMeter => throw new NotImplementedException();

        protected override double MicroohmsPerMeterInOneOhmPerMeter => throw new NotImplementedException();

        protected override double MicroohmsPerMileInOneOhmPerMeter => throw new NotImplementedException();

        protected override double MilliohmsPerCentimeterInOneOhmPerMeter => throw new NotImplementedException();

        protected override double MilliohmsPerFootInOneOhmPerMeter => throw new NotImplementedException();

        protected override double MilliohmsPerKilometerInOneOhmPerMeter => throw new NotImplementedException();

        protected override double MilliohmsPerMeterInOneOhmPerMeter => throw new NotImplementedException();

        protected override double MilliohmsPerMileInOneOhmPerMeter => throw new NotImplementedException();

        protected override double NanoohmsPerCentimeterInOneOhmPerMeter => throw new NotImplementedException();

        protected override double NanoohmsPerFootInOneOhmPerMeter => throw new NotImplementedException();

        protected override double NanoohmsPerKilometerInOneOhmPerMeter => throw new NotImplementedException();

        protected override double NanoohmsPerMeterInOneOhmPerMeter => throw new NotImplementedException();

        protected override double NanoohmsPerMileInOneOhmPerMeter => throw new NotImplementedException();

        protected override double OhmsPerCentimeterInOneOhmPerMeter => throw new NotImplementedException();

        protected override double OhmsPerFootInOneOhmPerMeter => throw new NotImplementedException();

        protected override double OhmsPerKilometerInOneOhmPerMeter => throw new NotImplementedException();

        protected override double OhmsPerMeterInOneOhmPerMeter => throw new NotImplementedException();

        protected override double OhmsPerMileInOneOhmPerMeter => throw new NotImplementedException();

        protected override double PicoohmsPerCentimeterInOneOhmPerMeter => throw new NotImplementedException();

        protected override double PicoohmsPerFootInOneOhmPerMeter => throw new NotImplementedException();

        protected override double PicoohmsPerKilometerInOneOhmPerMeter => throw new NotImplementedException();

        protected override double PicoohmsPerMeterInOneOhmPerMeter => throw new NotImplementedException();

        protected override double PicoohmsPerMileInOneOhmPerMeter => throw new NotImplementedException();

        protected override bool SupportsSIUnitSystem => throw new NotImplementedException();
    }
}
